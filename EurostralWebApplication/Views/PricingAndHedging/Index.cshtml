@model EurostralWebApplication.Models.ViewModelPricingAndHedging

@{
    ViewBag.Title = "Index";
}

<p class="titleStyleBis"> Pricing</p>
<div class="row">
    <div class="col-md-12">
        @using (Ajax.BeginForm("getPrice", "PricingAndHedging", FormMethod.Post,
                           new AjaxOptions
                           {
                               InsertionMode = InsertionMode.Replace,
                               UpdateTargetId = "eurostralPrice",
                               LoadingElementId = "loading",
                               OnFailure = "AjaxFailure",
                               OnBegin = "AjaxBegin",
                               OnComplete = "AjaxComplete"
                           }))
        {
            <div class="col-md-4 bloc">
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.NumberOfMonteCarloIterations)
                        @Html.EditorFor(m => m.NumberOfMonteCarloIterations, new { htmlAttributes = new { @class = "form-control", @min = "1000", @step = "1000" } })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <input type="submit" name="priceButton" id="priceButton" value="Pricer" class="btn btn-primary">
                    </div>
                </div>
            </div>
        }
        <div class="col-md-5 col-md-offset-2 bloc">
            <div id="eurostralPrice">@Html.Partial("EurostralPrice", Session["Eurostral"])</div>
        </div>
    </div>
</div>

<p class="titleStyleBis"> Hedging</p>
<div class="row">
    <div class="col-md-12">
        @using (Ajax.BeginForm("hedgingPortfolio", "PricingAndHedging", FormMethod.Post,
                       new AjaxOptions
                       {
                           InsertionMode = InsertionMode.Replace,
                           UpdateTargetId = "portfolioComposition",
                           LoadingElementId = "loading",
                           OnFailure = "AjaxFailure",
                           OnBegin = "AjaxBegin",
                           OnComplete = "AjaxComplete"
                       }))
        {
            <div class="col-md-4 bloc">
                <p class="subtitleStyle1"> Rebalancement</p>
                <div class="row">
                    <ul>
                        @foreach (var item in Model.HedgingModes)
                        {
                            <li>
                                @Html.RadioButtonFor(m => m.AutomaticOrManualHedging, @item, new { @id = @item })
                                <label for=@item>@item</label>
                            </li>
                        }
                    </ul>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.Frequency)
                        @Html.DropDownListFor(m => m.Frequency, Model.FrequencyOptionsItems, new { @id = "frequency", @class = "form-control" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(m => m.NumberOfMonteCarloIterations)
                        @Html.EditorFor(m => m.NumberOfMonteCarloIterations, new { htmlAttributes = new { @class = "form-control", @min = "1000", @step = "1000" } })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-12">
                        <input type="submit" name="submitButton" id="startButton" value="Lancer" class="btn btn-primary">
                        <input type="submit" name="submitButton" id="hiddenStartButton" value="Rebalancement" class="btn hide">
                    </div>
                </div>
            </div>
        }
        <div class="col-md-7 col-md-offset-1 bloc">
            <div id="portfolioComposition">@Html.Partial("Portfolio", Session["Portfolio"])</div>
        </div>
    </div>
</div>




<script type="text/javascript">
    function updateAvailableItems() {
        var radioButtonChecked = $("input[name='AutomaticOrManualHedging']:checked").val();
        if (radioButtonChecked == "Automatique") {
            $("#startButton").val("Lancer");
            $("#frequency").prop("disabled", "");
        }
        else {
            $("#startButton").val("Rebalancer");
            $("#frequency").prop("disabled", "disabled");
        }
    }

    function hedgingPortfolio() {
        $("#hiddenStartButton").trigger("click");
    }

    function launchAutomaticRebalancing(currentFrequency) {
        intervalId = window.setInterval("hedgingPortfolio()", currentFrequency * 1000);
    }

    function doRightAction() {
        if ($("#startButton").val() == "Lancer") {
            $("#startButton").val("Arrêter");
            $("input[name='AutomaticOrManualHedging']").prop("disabled", "disabled");
            var currentFrequency = parseInt($("#frequency").val());
            setTimeout(launchAutomaticRebalancing(currentFrequency), currentFrequency * 1000);
        }
        else if ($("#startButton").val() == "Arrêter") {
            $("#startButton").val("Lancer");
            $("input[name='AutomaticOrManualHedging']").prop("disabled", "");
            clearInterval(intervalId);
        }
    }

    $(document).ready(function () {
        var intervalId;
        $("input[name='AutomaticOrManualHedging']").change(updateAvailableItems);
        $("#startButton").click(doRightAction);
    });
</script>




